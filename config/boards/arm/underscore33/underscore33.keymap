/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// This key-map file WILL NOT WORK FOR YOU, you will need to modify it. I really do not recommend adapting to it.
// This key-map file is set-up to be the full space layout.
// I strongly urge you to customise your firmware to suit your usage.
// Please feel free to join the ZMK server at https://discord.gg/TdRMQaTYdF for help.

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

behaviors {
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <300>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    combos {
    compatible = "zmk,combos";
    combo_del {
        timeout-ms = <50>;
        key-positions = <7 8>;
        bindings = <&kp DEL>;
        layers = <0 1 2>;
    };
    combo_bspc {
        timeout-ms = <50>;
        key-positions = <8 9>;
        bindings = <&kp BKSP>;
        layers = <0 1 2>;
    };
    combo_esc {
        timeout-ms = <50>;
        key-positions = <0 1>;
        bindings = <&kp ESC>;
        layers = <0 1 2>;

    };
};

};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |  N  |  M   |  ,  |  .  |  /  |
//             | CTL |            | SPC |      | ALT |
                        bindings = <
   &kp Q       &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P
   &kp A       &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &lt 2 RET
   &mt LSHFT Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &mt RSHFT FSLH
               &mt LCTRL TAB      &lt 1 SPC                     &kp LALT
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |
// |  !  |  @  |  #  |  $  |  %  |  ^  |  &  |  *  |  =  |  -  |
// |  \  |  {  |  [  |  (  |  _  |  )  |  ]  |  }  |  .  |  `  |
//             | CTL | ALT |  ENT | SPC | GUI  | CTL |
                        bindings = <
   &kp F1        &kp F2    &kp F3    &kp F4      &kp F5      &kp F6    &kp F7    &kp F8    &kp F9     &kp F10
   &kp N1        &kp N2    &kp N3    &kp N4      &kp N5      &kp N6    &kp N7    &kp N8    &kp N9     &kp N0
   &mt LSHFT F11 &kp F12  &kp APOS  &kp SEMI     &kp LBKT    &kp RBKT  &kp MINUS &kp EQUAL &kp BSLH   &trans
   &trans    &trans    &kp LWIN
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR| RST |     |      |     |      | PGDN |  UP  | PGUP |      |
// | BT0 |CMENU|     |      |     | HOME | LEFT | DOWN |RIGHT | END  |
// | BT1 | BOOT|     |      |     |      |      |      |      |      |
//             | CTL | ALT |  ENT | SPC | GUI  | CTL |
                        bindings = <
   &bt BT_CLR   &kp GRAVE      &kp PGUP       &trans  &trans     &kp C_PREV    &kp C_NEXT    &kp UP    &kp C_VOL_DN    &kp C_VOL_UP
   &bootloader  &kp HOME       &kp PGDN       &kp END &kp C_AL_CALC     &kp C_MUTE    &kp LEFT  &kp DOWN  &kp RIGHT &kp C_PLAY
   &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2   &trans  &trans     &trans    &trans    &trans    &trans    &trans
   &kp CAPS       &trans    &kp KP_NUM
                        >;
                };


        };
};
